{"ast":null,"code":"var _jsxFileName = \"C:\\\\WorkPlace\\\\Programming\\\\ReactUdemy_2\\\\HTTPrequestSECT14\\\\src\\\\App.js\";\nimport React, { useState, useEffect, useCallback } from 'react';\nimport MoviesList from './components/MoviesList';\nimport './App.css';\n\nfunction App() {\n  const [movies, fetchMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null); //syntax version 1 =>\n  // const fetchMoviesHandler = () => {                           \n  //   fetch('https://swapi.dev/api/films/').then(response=>{\n  //     return response.json()\n  //   }).then(data=>{\n  //     const transformedMovies = data.results.map(movie=>{\n  //       return {\n  //         key: movie.episode_id,\n  //         title: movie.title,ease_date,\n  //         openingText: movie.opening_crawl\n  //       }\n  //         releaseDate: movie.rel\n  //     })\n  //     fetchMovies(transformedMovies)\n  //   })\n  // }\n  //syntax version 2 =>\n\n  useEffect(() => {\n    fetchMoviesHandler();\n  }, []);\n  const fetchMoviesHandler = useCallback(async () => {\n    try {\n      setError(null);\n      setIsLoading(true);\n      const response = await fetch('https://swapi.dev/api/films/');\n      if (!response.ok) throw new Error(\"something is wrong\");\n      const data = await response.json();\n      const transformedMovies = data.results.map(movie => {\n        return {\n          key: movie.episode_id,\n          title: movie.title,\n          releaseDate: movie.release_date,\n          openingText: movie.opening_crawl\n        };\n      });\n      fetchMovies(transformedMovies);\n    } catch (error) {\n      setError(error.message);\n    }\n\n    setIsLoading(false);\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: fetchMoviesHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, \"Fetch Movies\")), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, !isLoading && movies.length > 0 && /*#__PURE__*/React.createElement(MoviesList, {\n    movies: movies,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 45\n    }\n  }), !isLoading && movies.length === 0 && !error && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 57\n    }\n  }, \" Found not movies. \"), error && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 19\n    }\n  }, \" \", error), isLoading && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 23\n    }\n  }, \" Loading... \")));\n}\n\nexport default App;","map":{"version":3,"names":["React","useState","useEffect","useCallback","MoviesList","App","movies","fetchMovies","isLoading","setIsLoading","error","setError","fetchMoviesHandler","response","fetch","ok","Error","data","json","transformedMovies","results","map","movie","key","episode_id","title","releaseDate","release_date","openingText","opening_crawl","message","length"],"sources":["C:/WorkPlace/Programming/ReactUdemy_2/HTTPrequestSECT14/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\n\nimport MoviesList from './components/MoviesList';\nimport './App.css';\n\nfunction App() {\n  const [movies, fetchMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false)\n  const [error, setError] = useState(null)\n\n  //syntax version 1 =>\n\n  // const fetchMoviesHandler = () => {                           \n  //   fetch('https://swapi.dev/api/films/').then(response=>{\n  //     return response.json()\n  //   }).then(data=>{\n  //     const transformedMovies = data.results.map(movie=>{\n  //       return {\n  //         key: movie.episode_id,\n  //         title: movie.title,ease_date,\n  //         openingText: movie.opening_crawl\n  //       }\n  //         releaseDate: movie.rel\n  //     })\n  //     fetchMovies(transformedMovies)\n  //   })\n  // }\n\n  //syntax version 2 =>\n\n  useEffect(() => {\n    fetchMoviesHandler()\n  }, [])\n\n\n  const fetchMoviesHandler = useCallback(async () => {\n    try {\n      setError(null)\n      setIsLoading(true);\n      const response = await fetch('https://swapi.dev/api/films/');\n\n      if (!response.ok)\n        throw new Error(\"something is wrong\")\n      const data = await response.json()\n\n      const transformedMovies = data.results.map(movie => {\n        return {\n          key: movie.episode_id,\n          title: movie.title,\n          releaseDate: movie.release_date,\n          openingText: movie.opening_crawl\n        }\n      })\n\n      fetchMovies(transformedMovies);\n\n    } catch (error) {\n      setError(error.message)\n    }\n    setIsLoading(false);\n  })\n  return (\n\n    <React.Fragment>\n      <section>\n        <button onClick={fetchMoviesHandler}>Fetch Movies</button>\n      </section>\n      <section>\n        {!isLoading && movies.length > 0 && <MoviesList movies={movies} />}\n        {!isLoading && movies.length === 0 && !error && <p> Found not movies. </p>}\n        {error && <p> {error}</p>}\n        {isLoading && <p> Loading... </p>}\n      </section>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,WAArC,QAAwD,OAAxD;AAEA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAO,WAAP;;AAEA,SAASC,GAAT,GAAe;EACb,MAAM,CAACC,MAAD,EAASC,WAAT,IAAwBN,QAAQ,CAAC,EAAD,CAAtC;EACA,MAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,KAAD,CAA1C;EACA,MAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,IAAD,CAAlC,CAHa,CAKb;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;;EAEAC,SAAS,CAAC,MAAM;IACdU,kBAAkB;EACnB,CAFQ,EAEN,EAFM,CAAT;EAKA,MAAMA,kBAAkB,GAAGT,WAAW,CAAC,YAAY;IACjD,IAAI;MACFQ,QAAQ,CAAC,IAAD,CAAR;MACAF,YAAY,CAAC,IAAD,CAAZ;MACA,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAAD,CAA5B;MAEA,IAAI,CAACD,QAAQ,CAACE,EAAd,EACE,MAAM,IAAIC,KAAJ,CAAU,oBAAV,CAAN;MACF,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAAnB;MAEA,MAAMC,iBAAiB,GAAGF,IAAI,CAACG,OAAL,CAAaC,GAAb,CAAiBC,KAAK,IAAI;QAClD,OAAO;UACLC,GAAG,EAAED,KAAK,CAACE,UADN;UAELC,KAAK,EAAEH,KAAK,CAACG,KAFR;UAGLC,WAAW,EAAEJ,KAAK,CAACK,YAHd;UAILC,WAAW,EAAEN,KAAK,CAACO;QAJd,CAAP;MAMD,CAPyB,CAA1B;MASAtB,WAAW,CAACY,iBAAD,CAAX;IAED,CApBD,CAoBE,OAAOT,KAAP,EAAc;MACdC,QAAQ,CAACD,KAAK,CAACoB,OAAP,CAAR;IACD;;IACDrB,YAAY,CAAC,KAAD,CAAZ;EACD,CAzBqC,CAAtC;EA0BA,oBAEE,oBAAC,KAAD,CAAO,QAAP;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE;IAAQ,OAAO,EAAEG,kBAAjB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,kBADF,CADF,eAIE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACG,CAACJ,SAAD,IAAcF,MAAM,CAACyB,MAAP,GAAgB,CAA9B,iBAAmC,oBAAC,UAAD;IAAY,MAAM,EAAEzB,MAApB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADtC,EAEG,CAACE,SAAD,IAAcF,MAAM,CAACyB,MAAP,KAAkB,CAAhC,IAAqC,CAACrB,KAAtC,iBAA+C;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,yBAFlD,EAGGA,KAAK,iBAAI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,QAAKA,KAAL,CAHZ,EAIGF,SAAS,iBAAI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,kBAJhB,CAJF,CAFF;AAcD;;AAED,eAAeH,GAAf"},"metadata":{},"sourceType":"module"}