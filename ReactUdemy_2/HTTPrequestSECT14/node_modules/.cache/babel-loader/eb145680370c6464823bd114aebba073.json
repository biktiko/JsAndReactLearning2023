{"ast":null,"code":"var _jsxFileName = \"C:\\\\WorkPlace\\\\Programming\\\\ReactUdemy_2\\\\HTTPrequestSECT14\\\\src\\\\App.js\";\nimport React, { useState, useEffect, useCallback } from 'react';\nimport MoviesList from './components/MoviesList';\nimport AddMovie from './components/AddMovie';\nimport './App.css';\n\nfunction App() {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const fetchMoviesHandler = useCallback(async () => {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const response = await fetch('https://httpreq-udemycoursesection14-default-rtdb.firebaseio.com/films.json');\n\n      if (!response.ok) {\n        throw new Error('Something went wrong!');\n      }\n\n      const data = await response.json();\n      console.log(data);\n      let loadedMovies = [];\n\n      for (const key in data) {\n        loadedMovies.push({\n          id: key,\n          title: data[key].title,\n          openingText: data[key].openingText,\n          releaseData: data[key].releaseDate\n        });\n      }\n\n      const transformedMovies = loadedMovies.map(movieData => {\n        return {\n          id: movieData.id,\n          title: movieData.title,\n          openingText: movieData.openingText,\n          releaseDate: movieData.releaseDate\n        };\n      });\n      setMovies(transformedMovies);\n    } catch (error) {\n      setError(error.message);\n    }\n\n    setIsLoading(false);\n  }, []);\n  useEffect(() => {\n    fetchMoviesHandler();\n  }, [fetchMoviesHandler]);\n\n  async function addMovieHandler(movie) {\n    try {\n      const response = await fetch(\"https://httpreq-udemycoursesection14-default-rtdb.firebaseio.com/films.json\", {\n        method: 'POST',\n        body: JSON.stringify(movie),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      await response.json();\n    } catch (error) {\n      console.log(error.message);\n    }\n  }\n\n  let content = /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }, \"Found no movies.\");\n\n  if (movies.length > 0) {\n    content = /*#__PURE__*/React.createElement(MoviesList, {\n      movies: movies,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 15\n      }\n    });\n  }\n\n  if (error) {\n    content = /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 15\n      }\n    }, error);\n  }\n\n  if (isLoading) {\n    content = /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 15\n      }\n    }, \"Loading...\");\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(AddMovie, {\n    onAddMovie: addMovieHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: fetchMoviesHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, \"Fetch Movies\")), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }, content));\n}\n\nexport default App;","map":{"version":3,"names":["React","useState","useEffect","useCallback","MoviesList","AddMovie","App","movies","setMovies","isLoading","setIsLoading","error","setError","fetchMoviesHandler","response","fetch","ok","Error","data","json","console","log","loadedMovies","key","push","id","title","openingText","releaseData","releaseDate","transformedMovies","map","movieData","message","addMovieHandler","movie","method","body","JSON","stringify","headers","content","length"],"sources":["C:/WorkPlace/Programming/ReactUdemy_2/HTTPrequestSECT14/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\n\nimport MoviesList from './components/MoviesList';\nimport AddMovie from './components/AddMovie';\nimport './App.css';\n\nfunction App() {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const fetchMoviesHandler = useCallback(async () => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch('https://httpreq-udemycoursesection14-default-rtdb.firebaseio.com/films.json');\n      if (!response.ok) {\n        throw new Error('Something went wrong!');\n      }\n\n      const data = await response.json();\n      console.log(data)\n      let loadedMovies = []\n      for(const key in data){\n        loadedMovies.push(\n          {\n            id: key,\n            title: data[key].title,\n            openingText: data[key].openingText,\n            releaseData: data[key].releaseDate\n          }\n        )\n      }\n\n      const transformedMovies = loadedMovies.map((movieData) => {\n        return {\n          id: movieData.id,\n          title: movieData.title,\n          openingText: movieData.openingText,\n          releaseDate: movieData.releaseDate,\n        };\n      });\n      setMovies(transformedMovies);\n    } catch (error) {\n      setError(error.message);\n    }\n    setIsLoading(false);\n  }, []);\n\n  useEffect(() => {\n    fetchMoviesHandler();\n  }, [fetchMoviesHandler]);\n\n  async function addMovieHandler(movie) {\n    try {\n      const response = await fetch(\"https://httpreq-udemycoursesection14-default-rtdb.firebaseio.com/films.json\",\n        {\n          method: 'POST',\n          body: JSON.stringify(movie),\n          headers:{\n            'Content-Type': 'application/json'\n          }\n        })\n      \n      await response.json();\n\n    } catch (error) {\n      console.log(error.message)\n    }\n  }\n\n  let content = <p>Found no movies.</p>;\n\n  if (movies.length > 0) {\n    content = <MoviesList movies={movies} />;\n  }\n\n  if (error) {\n    content = <p>{error}</p>;\n  }\n\n  if (isLoading) {\n    content = <p>Loading...</p>;\n  }\n\n  return (\n    <React.Fragment>\n      <section>\n        <AddMovie onAddMovie={addMovieHandler} />\n      </section>\n      <section>\n        <button onClick={fetchMoviesHandler}>Fetch Movies</button>\n      </section>\n      <section>{content}</section>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}