{"ast":null,"code":"var _jsxFileName = \"C:\\\\WorkPlace\\\\Programming\\\\ReactUdemy_2\\\\HTTPrequestSECT14\\\\src\\\\App.js\";\nimport React, { useState } from 'react';\nimport MoviesList from './components/MoviesList';\nimport './App.css';\n\nfunction App() {\n  const [movies, fetchMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false); //syntax version 1 =>\n  // const fetchMoviesHandler = () => {                           \n  //   fetch('https://swapi.dev/api/films/').then(response=>{\n  //     return response.json()\n  //   }).then(data=>{\n  //     const transformedMovies = data.results.map(movie=>{\n  //       return {\n  //         key: movie.episode_id,\n  //         title: movie.title,\n  //         releaseDate: movie.release_date,\n  //         openingText: movie.opening_crawl\n  //       }\n  //     })\n  //     fetchMovies(transformedMovies)\n  //   })\n  // }\n  //syntax version 2 =>\n\n  async function fetchMoviesHandler() {\n    setIsLoading(true);\n    const response = await fetch('https://swapi.dev/api/films/');\n    const data = await response.json();\n    const transformedMovies = data.results.map(movie => {\n      return {\n        key: movie.episode_id,\n        title: movie.title,\n        releaseDate: movie.release_date,\n        openingText: movie.opening_crawl\n      };\n    });\n    fetchMovies(transformedMovies);\n    setIsLoading(false);\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: fetchMoviesHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, \"Fetch Movies\")), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, !setIsLoading ? /*#__PURE__*/React.createElement(MoviesList, {\n    movies: movies,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 26\n    }\n  }) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 59\n    }\n  }, \"spaseli, zagruzkaya ay tupoy tesnumchs\")));\n}\n\nexport default App;","map":{"version":3,"names":["React","useState","MoviesList","App","movies","fetchMovies","isLoading","setIsLoading","fetchMoviesHandler","response","fetch","data","json","transformedMovies","results","map","movie","key","episode_id","title","releaseDate","release_date","openingText","opening_crawl"],"sources":["C:/WorkPlace/Programming/ReactUdemy_2/HTTPrequestSECT14/src/App.js"],"sourcesContent":["import React, {useState} from 'react';\n\nimport MoviesList from './components/MoviesList';\nimport './App.css';\n\nfunction App() {\n  const [movies, fetchMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false)\n\n  //syntax version 1 =>\n\n  // const fetchMoviesHandler = () => {                           \n  //   fetch('https://swapi.dev/api/films/').then(response=>{\n  //     return response.json()\n  //   }).then(data=>{\n  //     const transformedMovies = data.results.map(movie=>{\n  //       return {\n  //         key: movie.episode_id,\n  //         title: movie.title,\n  //         releaseDate: movie.release_date,\n  //         openingText: movie.opening_crawl\n  //       }\n  //     })\n  //     fetchMovies(transformedMovies)\n  //   })\n  // }\n\n  //syntax version 2 =>\n\n  async function fetchMoviesHandler(){\n    setIsLoading(true);\n    const response = await fetch('https://swapi.dev/api/films/');\n    const data = await response.json()\n    const transformedMovies = data.results.map(movie=>{\n            return {\n              key: movie.episode_id,\n              title: movie.title,\n              releaseDate: movie.release_date,\n              openingText: movie.opening_crawl\n            }\n          })\n\n    fetchMovies(transformedMovies);\n    setIsLoading(false);\n  }\n\n  return (\n    <React.Fragment>\n      <section>\n        <button onClick={fetchMoviesHandler}>Fetch Movies</button>\n      </section>\n      <section>\n        {!setIsLoading ? <MoviesList movies={movies} /> : <p>spaseli, zagruzkaya ay tupoy tesnumchs</p>} \n      </section>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AAEA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAO,WAAP;;AAEA,SAASC,GAAT,GAAe;EACb,MAAM,CAACC,MAAD,EAASC,WAAT,IAAwBJ,QAAQ,CAAC,EAAD,CAAtC;EACA,MAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,KAAD,CAA1C,CAFa,CAIb;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;;EAEA,eAAeO,kBAAf,GAAmC;IACjCD,YAAY,CAAC,IAAD,CAAZ;IACA,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAAD,CAA5B;IACA,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;IACA,MAAMC,iBAAiB,GAAGF,IAAI,CAACG,OAAL,CAAaC,GAAb,CAAiBC,KAAK,IAAE;MAC1C,OAAO;QACLC,GAAG,EAAED,KAAK,CAACE,UADN;QAELC,KAAK,EAAEH,KAAK,CAACG,KAFR;QAGLC,WAAW,EAAEJ,KAAK,CAACK,YAHd;QAILC,WAAW,EAAEN,KAAK,CAACO;MAJd,CAAP;IAMD,CAPmB,CAA1B;IASAlB,WAAW,CAACQ,iBAAD,CAAX;IACAN,YAAY,CAAC,KAAD,CAAZ;EACD;;EAED,oBACE,oBAAC,KAAD,CAAO,QAAP;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE;IAAQ,OAAO,EAAEC,kBAAjB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,kBADF,CADF,eAIE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACG,CAACD,YAAD,gBAAgB,oBAAC,UAAD;IAAY,MAAM,EAAEH,MAApB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAhB,gBAAiD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,4CADpD,CAJF,CADF;AAUD;;AAED,eAAeD,GAAf"},"metadata":{},"sourceType":"module"}