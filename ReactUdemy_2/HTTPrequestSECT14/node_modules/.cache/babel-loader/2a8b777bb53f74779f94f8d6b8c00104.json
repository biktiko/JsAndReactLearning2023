{"ast":null,"code":"var _jsxFileName = \"C:\\\\WorkPlace\\\\Programming\\\\ReactUdemy_2\\\\HTTPrequestSECT14\\\\src\\\\App.js\";\nimport React, { useState } from 'react';\nimport MoviesList from './components/MoviesList';\nimport './App.css';\n\nfunction App() {\n  const [movies, fetchMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(true); //syntax version 1 =>\n  // const fetchMoviesHandler = () => {                           \n  //   fetch('https://swapi.dev/api/films/').then(response=>{\n  //     return response.json()\n  //   }).then(data=>{\n  //     const transformedMovies = data.results.map(movie=>{\n  //       return {\n  //         key: movie.episode_id,\n  //         title: movie.title,ease_date,\n  //         openingText: movie.opening_crawl\n  //       }\n  //         releaseDate: movie.rel\n  //     })\n  //     fetchMovies(transformedMovies)\n  //   })\n  // }\n  //syntax version 2 =>\n\n  async function fetchMoviesHandler() {\n    try {\n      setIsLoading(true);\n      const response = await fetch('https://swapi.dev/api/film/');\n      if (!response.ok) throw new Error(\"something is wrong\");\n      const data = await response.json();\n      const transformedMovies = data.results.map(movie => {\n        return {\n          key: movie.episode_id,\n          title: movie.title,\n          releaseDate: movie.release_date,\n          openingText: movie.opening_crawl\n        };\n      });\n      fetchMovies(transformedMovies);\n    } catch (error) {\n      setError(error.message);\n    }\n\n    setIsLoading(false);\n  }\n\n  console.log(error);\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: fetchMoviesHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, \"Fetch Movies\")), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, !isLoading && movies.length > 0 && /*#__PURE__*/React.createElement(MoviesList, {\n    movies: movies,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 44\n    }\n  }), !isLoading && movies.length === 0 && error && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 54\n    }\n  }, \" Found not movies. \"), isLoading && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 23\n    }\n  }, \" Loading... \"), !error && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 20\n    }\n  }, \" \", error)));\n}\n\nexport default App;","map":{"version":3,"names":["React","useState","MoviesList","App","movies","fetchMovies","isLoading","setIsLoading","error","setError","fetchMoviesHandler","response","fetch","ok","Error","data","json","transformedMovies","results","map","movie","key","episode_id","title","releaseDate","release_date","openingText","opening_crawl","message","console","log","length"],"sources":["C:/WorkPlace/Programming/ReactUdemy_2/HTTPrequestSECT14/src/App.js"],"sourcesContent":["import React, {useState} from 'react';\n\nimport MoviesList from './components/MoviesList';\nimport './App.css';\n\nfunction App() {\n  const [movies, fetchMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false)\n  const [error, setError] = useState(true)\n\n  //syntax version 1 =>\n\n  // const fetchMoviesHandler = () => {                           \n  //   fetch('https://swapi.dev/api/films/').then(response=>{\n  //     return response.json()\n  //   }).then(data=>{\n  //     const transformedMovies = data.results.map(movie=>{\n  //       return {\n  //         key: movie.episode_id,\n  //         title: movie.title,ease_date,\n  //         openingText: movie.opening_crawl\n  //       }\n  //         releaseDate: movie.rel\n  //     })\n  //     fetchMovies(transformedMovies)\n  //   })\n  // }\n\n  //syntax version 2 =>\n\n  async function fetchMoviesHandler(){\n  try{\n        setIsLoading(true);\n        const response = await fetch('https://swapi.dev/api/film/');\n        \n        if(!response.ok)\n          throw new Error(\"something is wrong\") \n        const data = await response.json()\n    \n        const transformedMovies = data.results.map(movie=>{\n                return {\n                  key: movie.episode_id,\n                  title: movie.title,\n                  releaseDate: movie.release_date,\n                  openingText: movie.opening_crawl\n                }\n              })\n    \n        fetchMovies(transformedMovies);\n      \n      }catch(error){\n        setError(error.message)\n      }\n      setIsLoading(false);\n    }\n      console.log(error);\n  return (\n\n<React.Fragment>\n      <section>\n        <button onClick={fetchMoviesHandler}>Fetch Movies</button>\n      </section>\n      <section>\n        {!isLoading && movies.length> 0 && <MoviesList movies={movies} />} \n        {!isLoading && movies.length===0 && error && <p> Found not movies. </p>}\n        {isLoading && <p> Loading... </p>}\n        {!error && <p> {error}</p>}\n      </section>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AAEA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAO,WAAP;;AAEA,SAASC,GAAT,GAAe;EACb,MAAM,CAACC,MAAD,EAASC,WAAT,IAAwBJ,QAAQ,CAAC,EAAD,CAAtC;EACA,MAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,KAAD,CAA1C;EACA,MAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,IAAD,CAAlC,CAHa,CAKb;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;;EAEA,eAAeS,kBAAf,GAAmC;IACnC,IAAG;MACGH,YAAY,CAAC,IAAD,CAAZ;MACA,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAAD,CAA5B;MAEA,IAAG,CAACD,QAAQ,CAACE,EAAb,EACE,MAAM,IAAIC,KAAJ,CAAU,oBAAV,CAAN;MACF,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAAnB;MAEA,MAAMC,iBAAiB,GAAGF,IAAI,CAACG,OAAL,CAAaC,GAAb,CAAiBC,KAAK,IAAE;QAC1C,OAAO;UACLC,GAAG,EAAED,KAAK,CAACE,UADN;UAELC,KAAK,EAAEH,KAAK,CAACG,KAFR;UAGLC,WAAW,EAAEJ,KAAK,CAACK,YAHd;UAILC,WAAW,EAAEN,KAAK,CAACO;QAJd,CAAP;MAMD,CAPmB,CAA1B;MASAtB,WAAW,CAACY,iBAAD,CAAX;IAED,CAnBL,CAmBK,OAAMT,KAAN,EAAY;MACXC,QAAQ,CAACD,KAAK,CAACoB,OAAP,CAAR;IACD;;IACDrB,YAAY,CAAC,KAAD,CAAZ;EACD;;EACCsB,OAAO,CAACC,GAAR,CAAYtB,KAAZ;EACJ,oBAEF,oBAAC,KAAD,CAAO,QAAP;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACM;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE;IAAQ,OAAO,EAAEE,kBAAjB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,kBADF,CADN,eAIM;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACG,CAACJ,SAAD,IAAcF,MAAM,CAAC2B,MAAP,GAAe,CAA7B,iBAAkC,oBAAC,UAAD;IAAY,MAAM,EAAE3B,MAApB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADrC,EAEG,CAACE,SAAD,IAAcF,MAAM,CAAC2B,MAAP,KAAgB,CAA9B,IAAmCvB,KAAnC,iBAA4C;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,yBAF/C,EAGGF,SAAS,iBAAI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,kBAHhB,EAIG,CAACE,KAAD,iBAAU;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,QAAKA,KAAL,CAJb,CAJN,CAFE;AAcD;;AAED,eAAeL,GAAf"},"metadata":{},"sourceType":"module"}