{"ast":null,"code":"// const redux = require('redux'); //import reduex\nimport { createSlice, configureStore } from '@reduxjs/toolkit';\nconst initialState = {\n  counter: 0,\n  showCounter: true\n};\nconst counterSlice = createSlice({\n  name: \"counter\",\n  initialState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n\n    discrement(state) {\n      state.counter--;\n    },\n\n    increse(state, action) {\n      state.counter = state.counter + action.payload;\n    },\n\n    toggle(state) {\n      state.showCounter = !state.showCounter;\n    }\n\n  }\n});\nconst store = configureStore({\n  reducer: counterSlice.reducer\n}); //create store\n\nconst counterSubscriber = () => {\n  const latestState = store.getState(); // get store data\n\n  console.log(latestState);\n};\n\nstore.subscribe(counterSubscriber); //method call when store is changing\n\nexport const counterActions = counterSlice.actions;\nexport default store;","map":{"version":3,"names":["createSlice","configureStore","initialState","counter","showCounter","counterSlice","name","reducers","increment","state","discrement","increse","action","payload","toggle","store","reducer","counterSubscriber","latestState","getState","console","log","subscribe","counterActions","actions"],"sources":["C:/WorkPlace/Programming/ReduxUdemy/redux-starting-project-section18/src/store/index.js"],"sourcesContent":["// const redux = require('redux'); //import reduex\r\nimport {createSlice, configureStore} from '@reduxjs/toolkit'\r\n\r\nconst initialState = {counter: 0, showCounter: true}\r\n\r\nconst counterSlice = createSlice({\r\n    name:\"counter\",\r\n    initialState,\r\n    reducers: {\r\n        increment(state){\r\n            state.counter++\r\n        },\r\n        discrement(state){\r\n            state.counter--\r\n        },\r\n        increse(state, action){\r\n            state.counter=state.counter+action.payload\r\n        },\r\n        toggle(state){\r\n            state.showCounter=!state.showCounter\r\n        }\r\n    }\r\n})\r\n\r\nconst store = configureStore({\r\n    reducer: counterSlice.reducer\r\n}); //create store\r\n\r\n\r\nconst counterSubscriber = () => {               \r\n    const latestState = store.getState(); // get store data\r\n    console.log(latestState)\r\n}\r\n\r\nstore.subscribe(counterSubscriber)      //method call when store is changing\r\n\r\nexport const counterActions = counterSlice.actions\r\nexport default store"],"mappings":"AAAA;AACA,SAAQA,WAAR,EAAqBC,cAArB,QAA0C,kBAA1C;AAEA,MAAMC,YAAY,GAAG;EAACC,OAAO,EAAE,CAAV;EAAaC,WAAW,EAAE;AAA1B,CAArB;AAEA,MAAMC,YAAY,GAAGL,WAAW,CAAC;EAC7BM,IAAI,EAAC,SADwB;EAE7BJ,YAF6B;EAG7BK,QAAQ,EAAE;IACNC,SAAS,CAACC,KAAD,EAAO;MACZA,KAAK,CAACN,OAAN;IACH,CAHK;;IAINO,UAAU,CAACD,KAAD,EAAO;MACbA,KAAK,CAACN,OAAN;IACH,CANK;;IAONQ,OAAO,CAACF,KAAD,EAAQG,MAAR,EAAe;MAClBH,KAAK,CAACN,OAAN,GAAcM,KAAK,CAACN,OAAN,GAAcS,MAAM,CAACC,OAAnC;IACH,CATK;;IAUNC,MAAM,CAACL,KAAD,EAAO;MACTA,KAAK,CAACL,WAAN,GAAkB,CAACK,KAAK,CAACL,WAAzB;IACH;;EAZK;AAHmB,CAAD,CAAhC;AAmBA,MAAMW,KAAK,GAAGd,cAAc,CAAC;EACzBe,OAAO,EAAEX,YAAY,CAACW;AADG,CAAD,CAA5B,C,CAEI;;AAGJ,MAAMC,iBAAiB,GAAG,MAAM;EAC5B,MAAMC,WAAW,GAAGH,KAAK,CAACI,QAAN,EAApB,CAD4B,CACU;;EACtCC,OAAO,CAACC,GAAR,CAAYH,WAAZ;AACH,CAHD;;AAKAH,KAAK,CAACO,SAAN,CAAgBL,iBAAhB,E,CAAwC;;AAExC,OAAO,MAAMM,cAAc,GAAGlB,YAAY,CAACmB,OAApC;AACP,eAAeT,KAAf"},"metadata":{},"sourceType":"module"}