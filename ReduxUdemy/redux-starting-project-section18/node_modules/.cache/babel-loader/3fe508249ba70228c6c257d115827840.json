{"ast":null,"code":"// const redux = require('redux'); //import redux\nimport { configureStore } from '@reduxjs/toolkit';\nimport countSlice from './count-slice';\nimport authSlice from './auth-slice';\nconst store = configureStore({\n  //create store\n  reducer: {\n    counter: countSlice.reducer,\n    auth: authSlice\n  }\n});\n\nconst counterSubscriber = () => {\n  const latestState = store.getState(); // get store data\n\n  console.log(latestState);\n};\n\nstore.subscribe(counterSubscriber); //method call when store is changing\n\nexport default store;","map":{"version":3,"names":["configureStore","countSlice","authSlice","store","reducer","counter","auth","counterSubscriber","latestState","getState","console","log","subscribe"],"sources":["C:/WorkPlace/Programming/ReduxUdemy/redux-starting-project-section18/src/store/index.js"],"sourcesContent":["// const redux = require('redux'); //import redux\r\nimport {configureStore} from '@reduxjs/toolkit'\r\nimport countSlice from './count-slice';\r\nimport authSlice from './auth-slice';\r\n\r\nconst store = configureStore({ //create store\r\n    reducer:{counter: countSlice.reducer, auth: authSlice}\r\n}); \r\n\r\n\r\nconst counterSubscriber = () => {               \r\n    const latestState = store.getState(); // get store data\r\n    console.log(latestState)\r\n}\r\n\r\nstore.subscribe(counterSubscriber)      //method call when store is changing\r\n\r\n\r\nexport default store"],"mappings":"AAAA;AACA,SAAQA,cAAR,QAA6B,kBAA7B;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAOC,SAAP,MAAsB,cAAtB;AAEA,MAAMC,KAAK,GAAGH,cAAc,CAAC;EAAE;EAC3BI,OAAO,EAAC;IAACC,OAAO,EAAEJ,UAAU,CAACG,OAArB;IAA8BE,IAAI,EAAEJ;EAApC;AADiB,CAAD,CAA5B;;AAKA,MAAMK,iBAAiB,GAAG,MAAM;EAC5B,MAAMC,WAAW,GAAGL,KAAK,CAACM,QAAN,EAApB,CAD4B,CACU;;EACtCC,OAAO,CAACC,GAAR,CAAYH,WAAZ;AACH,CAHD;;AAKAL,KAAK,CAACS,SAAN,CAAgBL,iBAAhB,E,CAAwC;;AAGxC,eAAeJ,KAAf"},"metadata":{},"sourceType":"module"}